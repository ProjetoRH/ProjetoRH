<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/domain/model/valueobjects/TelefoneInvalidoException.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/domain/model/valueobjects/TelefoneInvalidoException.java" />
              <option name="updatedContent" value="package domain.model.valueobjects;&#10;&#10;public class TelefoneInvalidoException extends RuntimeException {&#10;    public TelefoneInvalidoException(String mensagem) {&#10;        super(mensagem);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/TesteCadastroFuncionario.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/TesteCadastroFuncionario.java" />
              <option name="updatedContent" value="package test;&#10;&#10;import application.service.FuncionarioService;&#10;import domain.model.Funcionario;&#10;import domain.model.valueobjects.Email;&#10;import domain.model.valueobjects.Telefone;&#10;import domain.repository.CargoRepository;&#10;import domain.repository.FuncionarioRepository;&#10;import infrastructure.persistence.CargoRepositoryImpl;&#10;import infrastructure.persistence.FuncionarioRepositoryImpl;&#10;&#10;public class TesteCadastroFuncionario {&#10;    public static void main(String[] args) {&#10;        FuncionarioRepository funcionarioRepository = new FuncionarioRepositoryImpl();&#10;        CargoRepository cargoRepository = new CargoRepositoryImpl();&#10;        FuncionarioService service = new FuncionarioService(funcionarioRepository, cargoRepository);&#10;&#10;        Funcionario funcionario = new Funcionario(&#10;                &quot;João Silva&quot;,&#10;                new Email(&quot;joao.silva@email.com&quot;),&#10;                new Telefone(&quot;11999999999&quot;),&#10;                &quot;Analista&quot;,&#10;                &quot;TI&quot;&#10;        );&#10;&#10;        try {&#10;            service.cadastrarFuncionario(funcionario);&#10;            System.out.println(&quot;Funcionário cadastrado com sucesso!&quot;);&#10;        } catch (Exception e) {&#10;            System.out.println(&quot;Erro ao cadastrar funcionário: &quot; + e.getMessage());&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>