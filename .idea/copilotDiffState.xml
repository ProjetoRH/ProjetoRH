<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/domain/model/Funcionario.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/domain/model/Funcionario.java" />
              <option name="originalContent" value="package domain.model;&#10;&#10;import domain.model.valueobjects.Email;&#10;import domain.model.valueobjects.Telefone;&#10;&#10;public class Funcionario {&#10;    String nome;&#10;    Email email;&#10;    Telefone telefone;&#10;    String cargo;&#10;    String setor;&#10;&#10;    public Funcionario(String nome, Email email, Telefone telefone, String cargo, String setor) {&#10;        this.nome = nome;&#10;        this.email = email;&#10;        this.telefone = telefone;&#10;        this.cargo = cargo;&#10;        this.setor = setor;&#10;    }&#10;&#10;    public String getNome() {&#10;        return nome;&#10;    }&#10;&#10;    public void setNome(String nome) {&#10;        this.nome = nome;&#10;    }&#10;&#10;    public Email getEmail() {&#10;        return email;&#10;    }&#10;&#10;    public void setEmail(Email email) {&#10;        this.email = email;&#10;    }&#10;&#10;    public Telefone getTelefone() {&#10;        return telefone;&#10;    }&#10;&#10;    public void setTelefone(Telefone telefone) {&#10;        this.telefone = telefone;&#10;    }&#10;&#10;    public String getCargo() {&#10;        return cargo;&#10;    }&#10;&#10;    public void setCargo(String cargo) {&#10;        this.cargo = cargo;&#10;    }&#10;&#10;    public String getSetor() {&#10;        return setor;&#10;    }&#10;&#10;    public void setSetor(String setor) {&#10;        this.setor = setor;&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Funcionario{&quot; +&#10;                &quot;nome='&quot; + nome + '\'' +&#10;                &quot;, email='&quot; + email + '\'' +&#10;                &quot;, telefone='&quot; + telefone + '\'' +&#10;                &quot;, cargo='&quot; + cargo + '\'' +&#10;                &quot;, setor='&quot; + setor + '\'' +&#10;                '}';&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package domain.model;&#10;&#10;import domain.model.valueobjects.Email;&#10;import domain.model.valueobjects.Telefone;&#10;&#10;public class Funcionario {&#10;    String nome;&#10;    Email email;&#10;    Telefone telefone;&#10;    String cargo;&#10;    String departamento;&#10;&#10;    public Funcionario(String nome, Email email, Telefone telefone, String cargo, String departamento) {&#10;        this.nome = nome;&#10;        this.email = email;&#10;        this.telefone = telefone;&#10;        this.cargo = cargo;&#10;        this.departamento = departamento;&#10;    }&#10;&#10;    public String getNome() {&#10;        return nome;&#10;    }&#10;&#10;    public void setNome(String nome) {&#10;        this.nome = nome;&#10;    }&#10;&#10;    public Email getEmail() {&#10;        return email;&#10;    }&#10;&#10;    public void setEmail(Email email) {&#10;        this.email = email;&#10;    }&#10;&#10;    public Telefone getTelefone() {&#10;        return telefone;&#10;    }&#10;&#10;    public void setTelefone(Telefone telefone) {&#10;        this.telefone = telefone;&#10;    }&#10;&#10;    public String getCargo() {&#10;        return cargo;&#10;    }&#10;&#10;    public void setCargo(String cargo) {&#10;        this.cargo = cargo;&#10;    }&#10;&#10;    public String getDepartamento() {&#10;        return departamento;&#10;    }&#10;&#10;    public void setDepartamento(String departamento) {&#10;        this.departamento = departamento;&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Funcionario{&quot; +&#10;                &quot;nome='&quot; + nome + '\'' +&#10;                &quot;, email='&quot; + email + '\'' +&#10;                &quot;, telefone='&quot; + telefone + '\'' +&#10;                &quot;, cargo='&quot; + cargo + '\'' +&#10;                &quot;, departamento='&quot; + departamento + '\'' +&#10;                '}';&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/domain/model/valueobjects/Email.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/domain/model/valueobjects/Email.java" />
              <option name="originalContent" value="package domain.model.valueobjects;&#10;&#10;import shared.exception.EmailInvalidoException;&#10;&#10;public class Email {&#10;    private final String email;&#10;&#10;    public Email(String email) {&#10;        if (!validarEmail(email)) {&#10;            throw new EmailInvalidoException(&quot;Email inválido: &quot; + email);&#10;        }&#10;        this.email = email;&#10;    }&#10;&#10;    private boolean validarEmail(String email) {&#10;        // Regex simples para validação de email&#10;        return email != null &amp;&amp; email.matches(&quot;^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$&quot; );&#10;    }&#10;&#10;    public String obterEmail() {&#10;        return email;&#10;    }&#10;}" />
              <option name="updatedContent" value="package domain.model.valueobjects;&#10;&#10;import shared.exception.EmailInvalidoException;&#10;&#10;public class Email {&#10;    private final String email;&#10;&#10;    public Email(String email) {&#10;        if (!validarEmail(email)) {&#10;            throw new EmailInvalidoException(&quot;Email inválido: &quot; + email);&#10;        }&#10;        this.email = email;&#10;    }&#10;&#10;    private boolean validarEmail(String email) {&#10;        // Regex simples para validação de email&#10;        return email != null &amp;&amp; email.matches(&quot;^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$&quot; );&#10;    }&#10;&#10;    public String obterEmail() {&#10;        return email;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/domain/model/valueobjects/Telefone.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/domain/model/valueobjects/Telefone.java" />
              <option name="originalContent" value="package domain.model.valueobjects;&#10;&#10;import shared.exceptions.TelefoneInvalidoException;&#10;&#10;public class Telefone {&#10;    private final String telefone;&#10;&#10;    public Telefone(String telefone) {&#10;        if (!validarTelefone(telefone)) {&#10;            throw new TelefoneInvalidoException(&quot;Telefone inválido: &quot; + telefone);&#10;        }&#10;        this.telefone = telefone;&#10;    }&#10;&#10;    private boolean validarTelefone(String telefone) {&#10;        return telefone != null &amp;&amp; (&#10;            telefone.matches(&quot;\\(\\d{2}\\)\\d{4,5}-\\d{4}&quot;) || // (11)99999-9999&#10;            telefone.matches(&quot;\\d{11}&quot;) // 11999999999&#10;        );&#10;    }&#10;&#10;    public String obterTelefone() {&#10;        return telefone;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package domain.model.valueobjects;&#10;&#10;import shared.exceptions.TelefoneInvalidoException;&#10;&#10;public class Telefone {&#10;    private final String telefone;&#10;&#10;    public Telefone(String telefone) {&#10;        if (!validarTelefone(telefone)) {&#10;            throw new TelefoneInvalidoException(&quot;Telefone inválido: &quot; + telefone);&#10;        }&#10;        this.telefone = telefone;&#10;    }&#10;&#10;    private boolean validarTelefone(String telefone) {&#10;        return telefone != null &amp;&amp; (&#10;            telefone.matches(&quot;\\(\\d{2}\\)\\d{4,5}-\\d{4}&quot;) || // (11)99999-9999&#10;            telefone.matches(&quot;\\d{11}&quot;) // 11999999999&#10;        );&#10;    }&#10;&#10;    public String obterTelefone() {&#10;        return telefone;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/domain/model/valueobjects/TelefoneInvalidoException.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/domain/model/valueobjects/TelefoneInvalidoException.java" />
              <option name="updatedContent" value="package domain.model.valueobjects;&#10;&#10;public class TelefoneInvalidoException extends RuntimeException {&#10;    public TelefoneInvalidoException(String mensagem) {&#10;        super(mensagem);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/TesteCadastroFuncionario.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/TesteCadastroFuncionario.java" />
              <option name="updatedContent" value="package test;&#10;&#10;import application.service.FuncionarioService;&#10;import domain.model.Funcionario;&#10;import domain.model.valueobjects.Email;&#10;import domain.model.valueobjects.Telefone;&#10;import domain.repository.CargoRepository;&#10;import domain.repository.FuncionarioRepository;&#10;import infrastructure.persistence.CargoRepositoryImpl;&#10;import infrastructure.persistence.FuncionarioRepositoryImpl;&#10;&#10;public class TesteCadastroFuncionario {&#10;    public static void main(String[] args) {&#10;        FuncionarioRepository funcionarioRepository = new FuncionarioRepositoryImpl();&#10;        CargoRepository cargoRepository = new CargoRepositoryImpl();&#10;        FuncionarioService service = new FuncionarioService(funcionarioRepository, cargoRepository);&#10;&#10;        Funcionario funcionario = new Funcionario(&#10;                &quot;João Silva&quot;,&#10;                new Email(&quot;joao.silva@email.com&quot;),&#10;                new Telefone(&quot;11999999999&quot;),&#10;                &quot;Analista&quot;,&#10;                &quot;TI&quot;&#10;        );&#10;&#10;        try {&#10;            service.cadastrarFuncionario(funcionario);&#10;            System.out.println(&quot;Funcionário cadastrado com sucesso!&quot;);&#10;        } catch (Exception e) {&#10;            System.out.println(&quot;Erro ao cadastrar funcionário: &quot; + e.getMessage());&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>